#VRML V2.0 utf8

WorldInfo {
	title "RP2-Cube 6"
}

Background {
	skyColor [0.8 0.8 0.8]
}

Viewpoint {
	position 0 0 12
}

Shape {
	appearance Appearance {
		texture ImageTexture {
			url "Pieces.png"
		}
	}
	geometry DEF IFS IndexedFaceSet {
		coord DEF COORD Coordinate {}
		texCoord DEF TEX TextureCoordinate {}
		solid FALSE
	}
}

PROTO Line [
	exposedField SFColor color 0 0 0
	field MFVec3f curve [0 0 0, 0 1 0]
	field MFInt32 points [4]
]
{
	Group {
		children [
			DEF SENS TouchSensor {}
			Shape {
				appearance Appearance {
					material DEF MAT Material {
						diffuseColor IS color
						transparency 1
					}
				}
				geometry DEF EXTR Extrusion {
					crossSection [
						0 0.05,
						0.0353553 0.0353553,
						0.05 0,
						0.0353553 -0.0353553,
						0 -0.05,
						-0.0353553 -0.0353553,
						-0.05 0,
						-0.0353553 0.0353553,
						0 0.05
					]
				}
			}
		]
	}

	DEF SCRIPT Script {
		eventIn SFTime touch
		eventOut SFFloat trans
		eventOut MFVec3f set_spine

		field SFBool active FALSE
		field MFVec3f spine IS curve
		field MFInt32 anz IS points

		url "javascript:
			function antipod(s)
			{
				apv = new SFVec3f(2 * s.x * s.z, 2 * s.y * s.z, s.x * s.x - s.z * s.z);
				return apv.divide(s.length());
			}

			function initialize()
			{
				c = new MFVec3f;
				k = 0;
				for(i = 0; i < anz.length; i++)
				{
					for(j = 0; j < anz[i]; j++)
					{
						c[k] = antipod(spine[i + 1].multiply(j).add(spine[i].multiply(anz[i] - j)).divide(anz[i]));
						k++
					}
				}
				c[k] = antipod(spine[anz.length]);
				set_spine = c;
			}

			function touch(value, time)
			{
				trans = active;
				active = !active;
			}"
	}

	ROUTE SENS.touchTime TO SCRIPT.touch
	ROUTE SCRIPT.trans TO MAT.transparency
	ROUTE SCRIPT.set_spine TO EXTR.set_spine
}

Line {
	color 1 0.5 0
	curve [3 2.5 2.5,
		3 -2.5 -2.5]
	points [20]
}

Line {
	color 1 0.5 0
	curve [3 2.5 -2.5,
		3 -2.5 2.5]
	points [20]
}

Line {
	color 1 0.5 0
	curve [2.5 3 2.5,
		-2.5 3 -2.5]
	points [20]
}

Line {
	color 1 0.5 0
	curve [2.5 3 -2.5,
		-2.5 3 2.5]
	points [20]
}

Line {
	color 1 0.5 0
	curve [2.5 2.5 3,
		-2.5 -2.5 3]
	points [20]
}

Line {
	color 1 0.5 0
	curve [2.5 -2.5 3,
		-2.5 2.5 3]
	points [20]
}

Line {
	color 1 0 0
	curve [
		3 -2 -3,
		3 3 2,
		2 3 3,
		-3 -2 3,
		-3 -3 2,
		2 -3 -3,
		3 -2 -3
	]
	points [20 4 20 4 20 4]
}

Line {
	color 1 0 0
	curve [
		3 -2 3,
		3 3 -2,
		2 3 -3,
		-3 -2 -3,
		-3 -3 -2,
		2 -3 3,
		3 -2 3
	]
	points [20 4 20 4 20 4]
}

Line {
	color 1 0 0
	curve [
		3 2 -3,
		3 -3 2,
		2 -3 3,
		-3 2 3,
		-3 3 2,
		2 3 -3,
		3 2 -3
	]
	points [20 4 20 4 20 4]
}

Line {
	color 1 0 0
	curve [
		3 2 3,
		3 -3 -2,
		2 -3 -3,
		-3 2 -3,
		-3 3 -2,
		2 3 3,
		3 2 3
	]
	points [20 4 20 4 20 4]
}

Line {
	color 0 0 1
	curve [
		3 -1 -3,
		3 3 1,
		1 3 3,
		-3 -1 3,
		-3 -3 1,
		1 -3 -3,
		3 -1 -3
	]
	points [16 8 16 8 16 8]
}

Line {
	color 0 0 1
	curve [
		3 -1 3,
		3 3 -1,
		1 3 -3,
		-3 -1 -3,
		-3 -3 -1,
		1 -3 3,
		3 -1 3
	]
	points [16 8 16 8 16 8]
}

Line {
	color 0 0 1
	curve [
		3 1 -3,
		3 -3 1,
		1 -3 3,
		-3 1 3,
		-3 3 1,
		1 3 -3,
		3 1 -3
	]
	points [16 8 16 8 16 8]
}

Line {
	color 0 0 1
	curve [
		3 1 3,
		3 -3 -1,
		1 -3 -3,
		-3 1 -3,
		-3 3 -1,
		1 3 3,
		3 1 3
	]
	points [16 8 16 8 16 8]
}

Line {
	color 0 1 0
	curve [
		3 0 -3,
		3 3 0,
		0 3 3,
		-3 0 3,
	]
	points [12 12 12]
}

Line {
	color 0 1 0
	curve [
		3 0 3,
		3 3 0,
		0 3 -3,
		-3 -0 -3,
	]
	points [12 12 12]
}

Line {
	color 0 1 0
	curve [
		3 0 -3,
		3 -3 0,
		0 -3 3,
		-3 0 3,
	]
	points [12 12 12]
}

Line {
	color 0 1 0
	curve [
		3 0 3,
		3 -3 0,
		0 -3 -3,
		-3 0 -3,
	]
	points [12 12 12]
}

Line {
	color 1 1 0
	curve [
		2.5 3 3,
		2.5 3 -3,
		2.5 -3 -3,
		2.5 -3 3,
		2.5 3 3
	]
	points [24 24 24 24]
}

Line {
	color 1 1 0
	curve [
		1.5 3 3,
		1.5 3 -3,
		1.5 -3 -3,
		1.5 -3 3,
		1.5 3 3
	]
	points [24 24 24 24]
}

Line {
	color 1 1 0
	curve [
		0.5 3 3,
		0.5 3 -3,
		0.5 -3 -3,
		0.5 -3 3,
		0.5 3 3
	]
	points [24 24 24 24]
}

Line {
	color 1 0 1
	curve [
		3 2.5 3,
		3 2.5 -3,
		-3 2.5 -3,
		-3 2.5 3,
		3 2.5 3
	]
	points [24 24 24 24]
}

Line {
	color 1 0 1
	curve [
		3 1.5 3,
		3 1.5 -3,
		-3 1.5 -3,
		-3 1.5 3,
		3 1.5 3
	]
	points [24 24 24 24]
}

Line {
	color 1 0 1
	curve [
		3 0.5 3,
		3 0.5 -3,
		-3 0.5 -3,
		-3 0.5 3,
		3 0.5 3
	]
	points [24 24 24 24]
}

Line {
	color 0 1 1
	curve [
		3 3 2.5,
		3 -3 2.5,
		-3 -3 2.5,
		-3 3 2.5,
		3 3 2.5
	]
	points [24 24 24 24]
}

Line {
	color 0 1 1
	curve [
		3 3 1.5,
		3 -3 1.5,
		-3 -3 1.5,
		-3 3 1.5,
		3 3 1.5
	]
	points [24 24 24 24]
}

Line {
	color 0 1 1
	curve [
		3 3 0.5,
		3 -3 0.5,
		-3 -3 0.5,
		-3 3 0.5,
		3 3 0.5
	]
	points [24 24 24 24]
}

DEF START Script {
	directOutput TRUE

	eventOut MFVec3f coord
	eventOut MFVec2f texCoord
	eventOut MFInt32 coordIndex
	eventOut MFInt32 texCoordIndex

	field MFVec2f tex [9 15, 9 7, 9 15, 9 7, 9 15, 9 7,
		9 7, 9 15, 9 7, 9 15, 9 7, 9 15,
		9 15, 9 7, 9 15, 9 7, 9 15, 9 7,
		9 7, 9 15, 9 7, 9 15, 9 7, 9 15,
		9 15, 9 7, 9 15, 9 7, 9 15, 9 7,
		9 7, 9 15, 9 7, 9 15, 9 7, 9 15,
		9 15, 9 7, 9 15, 9 7, 9 15, 9 7,
		9 7, 1 15, 0 7, 0 15, 1 7, 9 15,
		9 15, 0 7, 8 15, 7 7, 0 15, 9 7,
		9 7, 0 15, 6 7, 6 15, 0 7, 9 15,
		9 15, 2 7, 0 15, 0 7, 2 15, 9 7,
		9 7, 9 15, 9 7, 9 15, 9 7, 9 15,
		9 15, 9 7, 9 15, 9 7, 9 15, 9 7,
		9 7, 1 14, 0 6, 0 14, 1 6, 9 15,
		9 15, 0 6, 7 14, 8 6, 0 14, 9 7,
		9 7, 0 14, 6 6, 6 14, 0 6, 9 15,
		9 15, 2 6, 0 14, 0 6, 2 14, 9 7,
		9 7, 9 15, 9 7, 9 15, 9 7, 9 15]

	url "javascript:
		function antipod(x, y, z)
		{
			len = Math.sqrt(x * x + y * y + z * z);
			apv = new SFVec3f(2 * x * z / len, 2 * y * z / len, (x * x - z * z) / len);
			return apv;
		}

		function texind(i, j)
		{
			t = tex[6 * Math.floor(i / 4) + Math.floor(j / 4)].multiply(4).add(new SFVec2f(j % 4, i % 4));
			return t.x + 41 * t.y;
		}

		function initialize()
		{
			tc = new MFVec2f;
			for(i = 0; i <= 64; i++)
			{
				for(j = 0; j <= 40; j++)
				{
					tc[41 * i + j] = new SFVec2f(j / 40, i / 64);
				}
			}
			texCoord = tc;

			c = new MFVec3f;
			for(i = -12; i <= 12; i++)
			{
				for(j = -12; j <= 12; j++)
				{
					c[25 * i + j + 312] = antipod(i / 4, j / 4, 3);
					c[25 * i + j + 937] = antipod(3, i / 4, -j / 4);
					c[25 * i + j + 1562] = antipod(j / 4, 3, i / 4);
				}
			}
			coord = c;

			ci = new MFInt32;
			tci = new MFInt32;
			for(i = 0; i < 24; i++)
			{
				for(j = 0; j < 24; j++)
				{
					ci[5 * (24 * i + j)] = 25 * i + j;
					ci[5 * (24 * i + j) + 1] = 25 * i + j + 1;
					ci[5 * (24 * i + j) + 2] = 25 * i + j + 26;
					ci[5 * (24 * i + j) + 3] = 25 * i + j + 25;
					ci[5 * (24 * i + j) + 4] = -1;
					ci[5 * (24 * i + j) + 2880] = 25 * i + j + 625;
					ci[5 * (24 * i + j) + 2881] = 25 * i + j + 626;
					ci[5 * (24 * i + j) + 2882] = 25 * i + j + 651;
					ci[5 * (24 * i + j) + 2883] = 25 * i + j + 650;
					ci[5 * (24 * i + j) + 2884] = -1;
					ci[5 * (24 * i + j) + 5760] = 25 * i + j + 1250;
					ci[5 * (24 * i + j) + 5761] = 25 * i + j + 1251;
					ci[5 * (24 * i + j) + 5762] = 25 * i + j + 1276;
					ci[5 * (24 * i + j) + 5763] = 25 * i + j + 1275;
					ci[5 * (24 * i + j) + 5764] = -1;
					tci[5 * (24 * i + j)] = texind(i, j);
					tci[5 * (24 * i + j) + 1] = texind(i, j) + 1;
					tci[5 * (24 * i + j) + 2] = texind(i, j) + 42;
					tci[5 * (24 * i + j) + 3] = texind(i, j) + 41;
					tci[5 * (24 * i + j) + 4] = -1;
					tci[5 * (24 * i + j) + 2880] = texind(i + 24, j);
					tci[5 * (24 * i + j) + 2881] = texind(i + 24, j) + 1;
					tci[5 * (24 * i + j) + 2882] = texind(i + 24, j) + 42;
					tci[5 * (24 * i + j) + 2883] = texind(i + 24, j) + 41;
					tci[5 * (24 * i + j) + 2884] = -1;
					tci[5 * (24 * i + j) + 5760] = texind(i + 48, j);
					tci[5 * (24 * i + j) + 5761] = texind(i + 48, j) + 1;
					tci[5 * (24 * i + j) + 5762] = texind(i + 48, j) + 42;
					tci[5 * (24 * i + j) + 5763] = texind(i + 48, j) + 41;
					tci[5 * (24 * i + j) + 5764] = -1;
				}
			}
			coordIndex = ci;
			texCoordIndex = tci;
		}"
}

ROUTE START.coord TO COORD.point
ROUTE START.texCoord TO TEX.point
ROUTE START.coordIndex TO IFS.set_coordIndex
ROUTE START.texCoordIndex TO IFS.set_texCoordIndex
